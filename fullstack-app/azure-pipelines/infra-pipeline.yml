# azure-pipelines/infra-pipeline.yml
trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  DB_ADMIN_USERNAME: $(DB_ADMIN_USERNAME)
  DB_ADMIN_PASSWORD: $(DB_ADMIN_PASSWORD)
  JWT_SECRET: $(JWT_SECRET)
  EMAIL_USER: $(EMAIL_USER)
  EMAIL_PASS: $(EMAIL_PASS)

steps:
- task: TerraformInstaller@0
  inputs:
    terraformVersion: 'latest'

- task: TerraformTaskV2@2
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
    backendServiceArm: 'azure-service-connection'
    backendAzureRmResourceGroupName: 'terraform-state-rg'
    backendAzureRmStorageAccountName: 'terraformstatexxxxx'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'terraform.tfstate'

- task: TerraformTaskV2@2
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
    environmentServiceNameAzureRM: 'azure-service-connection'

- task: TerraformTaskV2@2
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
    environmentServiceNameAzureRM: 'azure-service-connection'